""" 
A (Address) KaydÄ±: hackod.com gibi bir alan adÄ±nÄ±n IP adresini dÃ¶ndÃ¼rÃ¼r.
MX (Mail Exchange) KaydÄ±: E-posta sunucusunu ve Ã¶nceliÄŸini gÃ¶sterir.
NS (Name Server) KaydÄ±: Alan adÄ± iÃ§in yetkili ad sunucularÄ±nÄ± listeler.
CNAME (Canonical Name) KaydÄ±: Alan adÄ±nÄ±n diÄŸer bir adla eÅŸleÅŸtirildiÄŸini gÃ¶sterir.
TXT (Text) KaydÄ±: SPF, DMARC gibi text tabanlÄ± bilgiler sunabilir.
SOA (Start of Authority) KaydÄ±: Alan adÄ± iÃ§in otorite bilgilerini (primary DNS sunucusu, sorumlu kiÅŸi vb.) iÃ§erir.
"""


import dns.resolver

# A (Address) kayÄ±tlarÄ± sorgusu
print("ğŸ”¹ A (Address) KayÄ±tlarÄ±: ")
try:
    a_records = dns.resolver.resolve('hackod.com', 'A')
    for ipval in a_records:
        print(f"IP Adresi: {ipval.to_text()} - TTL: {a_records.rrset.ttl} saniye")
except Exception as e:
    print(f"A kaydÄ± hatasÄ±: {e}")

# MX (Mail Exchange) kayÄ±tlarÄ± sorgusu
print("\nğŸ”¹ MX (Mail Exchange) KayÄ±tlarÄ±: ")
try:
    mx_records = dns.resolver.resolve('google.com', 'MX')
    for mx in mx_records:
        print(f"Mail Sunucusu: {mx.exchange} - Ã–ncelik: {mx.preference} - TTL: {mx_records.rrset.ttl} saniye")
except Exception as e:
    print(f"MX kaydÄ± hatasÄ±: {e}")

# NS (Name Server) kayÄ±tlarÄ± sorgusu
print("\nğŸ”¹ NS (Name Server) KayÄ±tlarÄ±: ")
try:
    ns_records = dns.resolver.resolve('google.com', 'NS')
    for ns in ns_records:
        print(f"Name Server: {ns.target} - TTL: {ns_records.rrset.ttl} saniye")
except Exception as e:
    print(f"NS kaydÄ± hatasÄ±: {e}")

# CNAME (Canonical Name) kayÄ±tlarÄ± sorgusu
print("\nğŸ”¹ CNAME (Canonical Name) KayÄ±tlarÄ±: ")
try:
    cname_records = dns.resolver.resolve('www.google.com', 'CNAME')
    for cname in cname_records:
        print(f"Canonical Name: {cname.target} - TTL: {cname_records.rrset.ttl} saniye")
except Exception as e:
    print(f"CNAME kaydÄ± hatasÄ±: {e}")

# TXT (Text) kayÄ±tlarÄ± sorgusu
print("\nğŸ”¹ TXT (Text) KayÄ±tlarÄ±: ")
try:
    txt_records = dns.resolver.resolve('google.com', 'TXT')
    for txt in txt_records:
        print(f"TXT KaydÄ±: {txt.to_text()} - TTL: {txt_records.rrset.ttl} saniye")
except Exception as e:
    print(f"TXT kaydÄ± hatasÄ±: {e}")

# SOA (Start of Authority) kayÄ±tlarÄ± sorgusu
print("\nğŸ”¹ SOA (Start of Authority) KayÄ±tlarÄ±: ")
try:
    soa_records = dns.resolver.resolve('google.com', 'SOA')
    for soa in soa_records:
        print(f"Primary Name Server: {soa.mname}")
        print(f"Responsible Party: {soa.rname}")
        print(f"Serial Number: {soa.serial}")
        print(f"Refresh Interval: {soa.refresh} saniye")
        print(f"Retry Interval: {soa.retry} saniye")
        print(f"Expire Limit: {soa.expire} saniye")
        print(f"Minimum TTL: {soa.minimum} saniye")
except Exception as e:
    print(f"SOA kaydÄ± hatasÄ±: {e}")
